{"version":3,"sources":["components/card/card-components.jsx","components/card-list/card-list-components.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchTerm","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OACZ,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,cAAcC,IAAG,+BAA0BH,EAAMI,QAAQC,MAClE,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHjBC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACnC,OACA,uBACIC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCqCHG,G,wDArCf,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,WAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXb,SAAW,GACXU,WAAa,IALJ,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAWkB,S,oBAO3C,WAEE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAWU,EAAnB,EAAmBA,WACbU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAWY,kBAEjD,OACA,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCNI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.842ce525.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster_img\" src={`https://robohash.org/${props.monster.id}`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card-components'\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    <div className=\"card-list\">\r\n    {\r\n        props.monsters.map(monster =>(\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))\r\n    } \r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => {\r\n    return(\r\n    <input\r\n        type=\"search\"\r\n        className=\"search\"\r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n    />)\r\n}","import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list-components'\nimport { SearchBox } from './components/search-box/search-box-component'\nimport './App.css';\n\n// function App() {\n//   return (<h1>Rini John</h1>);\n// }\nclass App extends Component {\nconstructor(){\n  super();\n\n  this.state = {\n    monsters : [],\n    searchTerm : ''\n  };\n}\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters : users}))\n}\n\nhandleChange = e =>{\n  this.setState({searchTerm : e.target.value})\n}\n\nrender() {\n  // console.log(this.state.monsters);\n  const { monsters , searchTerm } = this.state;\n  const filteredMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n  return (\n  <div className=\"App\">\n    <h1>Monsters Rolodex</h1>\n    <SearchBox\n      placeholder=\"search monsters\"\n      handleChange={this.handleChange}\n    />\n    <CardList monsters={filteredMonsters}></CardList>\n  </div>\n  );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}